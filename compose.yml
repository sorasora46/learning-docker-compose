name: fullstack-app

services:
  frontend:
    build: 
      context: ./frontend/
      args:
        VITE_BACKEND_URL: ${VITE_BACKEND_URL}
    ports:
      - "${FRONTEND_EXPOSE_PORT}:80"
    restart: always
    depends_on:
      - backend

  backend:
    build: ./backend/
    ports:
      - "${BACKEND_EXPOSE_PORT}:${BACKEND_PORT}"
    restart: always
    depends_on:
      - database
      # this only wait for the database service's container to startup
      # it doesn't wait for the database to be ready to work/accept request
    environment:
      BACKEND_PORT: ${BACKEND_PORT}
      FRONTEND_URL: ${FRONTEND_URL} # for CORS, use service's name
      # example: http://backend:5000
      # service communicate with each other with docker internal network
      # via service's name
      POSTGRES_HOST: ${POSTGRES_HOST} # use service's name
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  database:
    image: postgres
    restart: always
    volumes:
      - fullstack-app-volume:/var/lib/postgres/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

volumes:
  fullstack-app-volume:

networks:
  default:
    name: fullstack-app-network
